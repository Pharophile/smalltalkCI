running
runCase: aTestCase
	| result |
	result := SCITestRunnerResult new testCase: aTestCase; yourself.
	SmalltalkCI printToStdout: aTestCase asString.
	result time: (SmalltalkCI timeToRun: [
		[ aTestCase runCase ]
			on: Halt , Error, TestFailure
			do: [ :err |
				result testError: err.
				aTestCase shouldPass ifTrue: [self serializeError: result testError of: aTestCase].
				result stack: (self stackTraceString: err of: aTestCase) ] ]).
	self printProgress: result.
	(results at: aTestCase class ifAbsentPut: [ OrderedCollection new ])
		add: result